<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:c="http://www.springframework.org/schema/c"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- DispatcherServlet Context: определяет настройки одного сервлета; бины, которые доступны только ему -->

    <!--propertyConfigurer-->
    <beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="locations">
            <beans:list>
                <beans:value>/WEB-INF/server.properties</beans:value>
                <!--<beans:value>classpath:server1.properties</beans:value>-->
                <!--<beans:value>classpath:server.properties</beans:value>-->
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- Multipart filt resolver for uploading files-->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!-- Custom conversion servise for String to entity conversion-->
    <beans:bean id="conversionService"
                class="org.springframework.context.support.ConversionServiceFactoryBean"/>

    <!--DomainClassConverter to enable Spring MVC to resolve instances of repository managed domain classes from request parameters or path variables.-->
    <!--<beans:bean class="org.springframework.data.repository.support.DomainClassConverter" c:conversionService-ref="conversionService"/>-->
    <beans:bean class="com.imcode.controllers.converters.IdToDomainClassConverter" c:conversionService-ref="conversionService"/>

    <!-- Разрешаем использование аннотаций Spring MVC (то есть @Controller и.@Valid, MessageConverters) -->
    <annotation-driven conversion-service="conversionService">
    <!--<argument-resolvers>-->
        <!--&lt;!&ndash;HandlerMethodArgumentResolver implementations to let Spring MVC resolve Pageable and Sort instances from request parameters.&ndash;&gt;-->
        <!--<beans:bean id="sortResolver" class="org.springframework.data.web.SortHandlerMethodArgumentResolver" />-->
        <!--<beans:bean id="pageableResolver" class="org.springframework.data.web.PageableHandlerMethodArgumentResolver"-->
                <!--c:sortResolver-ref="sortResolver"/>-->
    <!--</argument-resolvers>-->
</annotation-driven>





    <!-- Всю статику (изображения, css-файлы, javascript) положим в папку webapp/resources
        и замаппим их на урл вида /resources/** -->
    <resources mapping="/resources/**" location="/WEB-INF/web-resources/"/>

    <default-servlet-handler/>

    <!-- Отображение видов на jsp-файлы, лежащие в папке /WEB-INF/views -->
    <!--<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--<beans:property name="prefix" value="/WEB-INF/views/"/>-->
    <!--<beans:property name="suffix" value=".jsp"/>-->
    <!--</beans:bean>-->
    <!-- Apache tiles view Resolver-->

    <beans:bean id="tilesConfigurer"
                class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"
            p:preparerFactoryClass="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/tiles.xml</beans:value>
            </beans:list>
        </beans:property>

    </beans:bean>

    <beans:bean id="viewResolver"
                class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass"
                        value="org.springframework.web.servlet.view.tiles2.TilesView"/>
    </beans:bean>

    <!-- -->

    <interceptors>
        <beans:bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor"/>
        <beans:bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
                    p:paramName="lang"/>
    </interceptors>

    <beans:bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource"
                p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application"
                p:fallbackToSystemLocale="false"
                p:defaultEncoding="UTF-8"/>

    <beans:bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
                id="localeResolver"
                p:cookieName="locale"/>

    <beans:bean class="org.springframework.ui.context.support.ResourceBundleThemeSource"
                id="themeSource"
                p:basenamePrefix="theme/"/>

    <beans:bean class="org.springframework.web.servlet.theme.CookieThemeResolver" id="themeResolver"
                p:cookieName="theme"
                p:defaultThemeName="general"/>
    <!-- Configure to plugin JSON as request and response in method handler -->
    <!--<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
    <!--<beans:property name="messageConverters">-->
    <!--<beans:list>-->
    <!--<beans:ref bean="jsonMessageConverter"/>-->
    <!--</beans:list>-->
    <!--</beans:property>-->
    <!--</beans:bean>-->

    <!--&lt;!&ndash; Configure bean to convert JSON to POJO and vice versa &ndash;&gt;-->
    <!--<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
    <!---->
    <!--</beans:bean>-->

    <!--&lt;!&ndash; Файл с настройками контроллеров &ndash;&gt;-->
    <!--<beans:import resource="controllers.xml" />-->
    <context:component-scan base-package="com.imcode.controllers.html"/>
</beans:beans>